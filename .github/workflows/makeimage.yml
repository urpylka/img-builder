name: CI

env:
  PROJECT: theimage

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - dev

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Get version of the image
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            # Strip git ref prefix from version
            V=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            # Strip "v" prefix from tag name
            V=$(echo ${V} | sed -e 's/^v//')
          else
            V="$(git log --format=%h -1)"
          fi
          # https://stackoverflow.com/questions/57968497/how-do-i-set-an-env-var-with-a-bash-expression-in-github-actions
          echo "IMAGE_VERSION=${V}" >> ${GITHUB_ENV}
          echo "PROJECT=${PROJECT}"
          echo "IMAGE_VERSION=${V}"

      - name: Build image
        run: ./build.sh

      - name: Fix perms
        run: sudo chown -Rf runner:docker images

      - name: Zip the image
        run: |
          zip -9 images/${PROJECT}-${IMAGE_VERSION}.zip images/${PROJECT}-${IMAGE_VERSION}.img

      - name: Upload cached image file
        # https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT }}-${{ env.IMAGE_VERSION }}.zip
          path: images/${{ env.PROJECT }}-${{ env.IMAGE_VERSION }}.zip

  push:

    # https://github.com/marketplace/actions/github-releases
    # https://github.com/marketplace/actions/create-release
    # https://github.com/marketplace?type=actions&query=releases

    # Ensure build job passes before pushing image.
    needs: build

    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - name: Use cached image
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PROJECT }}-${{ env.IMAGE_VERSION }}.zip
          path: images/${{ env.PROJECT }}-${{ env.IMAGE_VERSION }}.zip

      - name: Publish image
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: images/${{ env.PROJECT }}-${{ env.IMAGE_VERSION }}.zip
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
